{
	"info": {
		"_postman_id": "7814a768-3491-4e9b-95b7-b38fcd46c956",
		"name": "postman_overbye_postgress",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "registration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Melissa\",\r\n    \"surname\": \"Fumero\",\r\n    \"email\": \"zxc@user.ru\",\r\n    \"password\": \"user\",\r\n    \"dob\": \"19.06.1982\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/registration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Body json status is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"pm.test(\"Body json have property 'message'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"pm.test(\"Body json have property 'token'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('token');\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"admin@admin.ru\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Body json status is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"pm.test(\"Body json have property 'message'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"pm.test(\"Body json have property 'users'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('users');\r",
									"});\r",
									"pm.test(\"Body json property 'users' is array\", function () {\r",
									"    var jsonData = pm.response.json();    \r",
									"    pm.expect(jsonData.users).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/auth/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOneUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Body json status is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"pm.test(\"Body json have property 'message'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"pm.test(\"Body json have property 'user'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('user');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/auth/user/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"user",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body json status is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"pm.test(\"Body json have property 'message'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"pm.test(\"Body json have property 'user'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('user');\r",
									"});\r",
									"pm.test(\"Body json user have property 'id'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user).to.have.property('id');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 8,\r\n    \"name\": \"Jane\",\r\n    \"surname\": \"Doe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body json status is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"pm.test(\"Body json have property 'message'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/auth/user/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"user",
								"10"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "id",
			"value": "7",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		}
	]
}